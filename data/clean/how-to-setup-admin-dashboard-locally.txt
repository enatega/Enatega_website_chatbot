---

# Installation
## Prerequisites
## How to Setup Locally
### NodeJS Setup
### Git and GitHub Setup
### Setup Backend API
### Web Dashboard Setup
### Admin Dashboard Setup
### Customer App Setup
### Rider App Setup
### Restaurant App Setup

## How to Setup/Deploy for Production
### Configuration
- Google Maps API Keys
- Nodemailer Setup
- Configuring Payment Gateways
- Twilio Setup
- Sentry Dashboard
- Configuring Cloudinary
- Amplitude Dashboard
- Firebase Setup
- Push Notification Keys
- Social Login
- Configuring Database Server Configurations

---

# Installation
## How To Setup Admin Dashboard
1. Clone or download source code from GitHub.
2. To download the Admin Dashboard, click here on Download Enatega Multivendor.

⚠️ **Note:** Ensure you have Node.js installed on your computer to launch the module.

### After Installing Node.js:
- Open the Enatega MultiVendor code in a code editor.
- To run the enatega-multivendor-admin, open it in the integrated terminal by:
  - Right-clicking on the enatega-multivendor-admin folder and selecting “Open in Integrated Terminal”
  - Or by using the following command in the terminal: 
    ```
    cd <Project directory>
    ```
    For example: 
    ```
    cd enatega-multivendor-admin
    ```

### Testing the Admin
- To test the Admin (if you don’t have your own server URL) and check the look and feel, no changes are needed.
- To run the Admin against your own server URL:
  1. Go to the `src` folder.
  2. Inside the `src` folder, go to the `config` folder.
  3. In the `config` folder, open `constants.js`.
  4. Replace the following in `constants.js`:
    - `SERVER_URL`
    - `WS_SERVER_URL`
    - `GOOGLE_MAPS_KEY`

### Running the Admin Dashboard
- After completing all the configurations, it’s time to run the admin dashboard.
- To run the admin dashboard, open the terminal and run the following commands:
  ```
  npm install (or yarn install)
  npm start
  ```

---